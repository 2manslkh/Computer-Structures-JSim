.include "/nominal.jsim"
.include "/lab2checkoff.jsim"

****************************************************************
* Inverter
****************************************************************
.subckt inv a z

MPD1 z a 0 0 NENH sw=4 sl=1
MPU1 z a vdd vdd PENH sw=4 sl=1

.ends

****************************************************************
* 2 Input OR
****************************************************************
.subckt or2 a b o

Xinv z o inv
MPD1 z a 0 0 NENH sw=4 sl=1
MPD2 z b 0 0 NENH sw=4 sl=1
MPU1 1 a vdd vdd PENH sw=4 sl=1
MPU2 z b 1 vdd PENH sw=4 sl=1

.ends

****************************************************************
* 2 Input NOR
****************************************************************
.subckt nor2 a b z

MPD1 z a 0 0 NENH sw=4 sl=1
MPD2 z b 0 0 NENH sw=4 sl=1
MPU1 g a vdd vdd PENH sw=4 sl=1
MPU2 z b g vdd PENH sw=4 sl=1

.ends

****************************************************************
* 2-input NAND: inputs are A and B, output is Z
****************************************************************
.subckt nand2 a b z

MPD1 z a 1 0 NENH sw=4 sl=1
MPD2 1 b 0 0 NENH sw=4 sl=1
MPU1 z a vdd vdd PENH sw=4 sl=1
MPU2 z b vdd vdd PENH sw=4 sl=1

.ends

****************************************************************
* 2 Input AND
****************************************************************
.subckt and2 a b o

XNAND a b c nand2
XINV c o inv

.ends

****************************************************************
* XOR: inputs are A and B, output is Z 
****************************************************************
* Build on NOR2 --  See Lab 2 Instructions
.subckt xor2 a b z 

Xnor a b p nor2 
MPU1 2 a vdd vdd PENH sw=4 sl=1 
MPU2 z p 2 vdd PENH sw=4 sl=1 
MPU3 2 b vdd vdd PENH sw=4 sl=1
MPD1 z a 1 0 NENH sw=4 sl=1 
MPD2 1 b 0 0 NENH sw=4 sl=1 
MPD3 z p 0 0 NENH sw=4 sl=1 

.ends

****************************************************************
* 1 Bit Full-Adder (FA)
****************************************************************
.subckt FA a b ci s co

XXOR1 a b xorout1 xor2
XXOR2 xorout1 ci s xor2
XNAND1 a b andout1 and2
XNAND2 ci xorout1 andout2 and2
XOR andout1 andout2 co or2

.ends

****************************************************************
* 4 Bit Full-Adder
****************************************************************

* remember the node named "0" is the ground node
* nodes c0 through c3 are internal to the ADDER module

.subckt ADDER4 a3 a2 a1 a0 b3 b2 b1 b0 s4 s3 s2 s1 s0

Xbit0 a0 b0 0 s0 c0 FA
Xbit1 a1 b1 c0 s1 c1 FA
Xbit2 a2 b2 c1 s2 c2 FA
Xbit3 a3 b3 c2 s3 s4 FA

.ends



